XML will be written to /home/tomas-pastore/449_correct_py_3.evt
Running EZ Detect
Reading TRC file header from /home/tomas-pastore/TRCs/449_correct.TRC
This is a System98 header
Reading * MICROMED  Brain-Quick file *
Reading Recording data
	Laboratory:                                
	Patient data
		Surname: LName                 
		Name: Name                
		Birth Date: 1985-4-25
	Recording Date: 2014-7-31
	Recording Time: 3:4:1
	Acqusition Unit: 35
	File Type: 74
	Data stored at 443370 in 66 channels (multiplexer 132)
	Min Sample Freq: 2000
	Bytes per Sample: 2
	Compressed: 0
	Number of Montages: 2
	Video data starts at 4294967295
	Video sync: 0
Reading descriptors
	ORDER: @640 (512 bytes)
	LABCOD: @1152 (81920 bytes)
	NOTE: @83072 (44000 bytes)
	FLAGS: @127072 (800 bytes)
	TRONCA: @127872 (800 bytes)
	IMPED_B: @128672 (512 bytes)
	IMPED_E: @129184 (512 bytes)
	MONTAGE: @129696 (122880 bytes)
	COMPRESS: @252576 (10 bytes)
	AVERAGE: @252586 (128 bytes)
	HISTORY: @252714 (123392 bytes)
	DVIDEO: @376106 (16384 bytes)
	EVENT A: @392490 (864 bytes)
	EVENT B: @393354 (864 bytes)
	TRIGGER: @394218 (49152 bytes)
	BRAINIMG: @0 (0 bytes)
Reading notes
	Note at sample 1: Created with FastWave TRC Writer
Reading flags
Reading segments description
Reading starting impedances
Reading ending impedances
Reading montages
Reading triggers
Reading 0 ... 7200217  =      0.000 ...  3600.108 secs...
Reading 7200218 samples from 443370 (len 475214388)
Read data in 25.54197359085083 seconds
Entering ez_lfbad
impedence checkrunning neural network to find bad electrode recording sites 
chan =

     1


chan =

     2


chan =

     3


chan =

     4


chan =

     5


chan =

     6


chan =

     7


chan =

     8


chan =

     9


chan =

    10


chan =

    11


chan =

    12


chan =

    13


chan =

    14


chan =

    15


chan =

    16


chan =

    17


chan =

    18


chan =

    19


chan =

    20


chan =

    21


chan =

    22


chan =

    23


chan =

    24


chan =

    25


chan =

    26


chan =

    27


chan =

    28


chan =

    29


chan =

    30


chan =

    31


chan =

    32


chan =

    33


chan =

    34


chan =

    35


chan =

    36


chan =

    37


chan =

    38


chan =

    39


chan =

    40


chan =

    41


chan =

    42


chan =

    43


chan =

    44


chan =

    45


chan =

    46


chan =

    47


chan =

    48


chan =

    49


chan =

    50


chan =

    51


chan =

    52


chan =

    53


chan =

    54


chan =

    55


chan =

    56


chan =

    57


Y =

    0.0642
    0.0316
    0.0409
    0.0393
    0.0093
    0.0268
    0.0640
    0.0533
    0.0457
    0.0204
    0.0118
    0.2499
    0.0491
    0.0221
    0.0401
    0.0369
    0.0079
    0.0121
    0.0136
    0.0526
    0.0405
    0.0649
    0.0842
    0.0872
    0.0081
    0.0388
    0.0075
    0.0098
    0.0224
    0.0146
    0.0062
    0.0113
    0.0205
    0.0576
    0.0222
    0.0030
    0.0112
    0.0033
    0.0048
    0.0151
    0.0100
    0.0091
    0.0171
    0.0135
    0.0116
    0.0315
    0.0391
    0.0066
    0.0186
    0.0408
    0.0191
    0.0045
    0.0033
    0.0087
    0.0086
    0.0075
    0.0072

Filtered: 62 of 62 data.Starting parallel pool (parpool) using the 'local' profile ...
Warning: Variable 'apitag' not found.
> In parallel.internal.cluster.FileSerializer>iLoadMat (line 286)
  In parallel.internal.cluster.FileSerializer/getFields (line 100)
  In parallel.internal.cluster.CJSSupport/getProperties (line 261)
  In parallel.internal.cluster.CJSSupport/getJobProperties (line 472)
  In parallel.internal.cluster.CJSJobMixin/hGetProperty (line 75)
  In parallel.internal.customattr.GetSetImpl>iGetProperties (line 270)
  In parallel.internal.customattr.GetSetImpl>iGetAllProperties (line 248)
  In parallel.internal.customattr.GetSetImpl.getImpl (line 124)
  In parallel.internal.customattr.CustomGetSet/get (line 30)
  In parallel.internal.customattr.WorkUnitFinder/filter (line 28)
  In parallel.internal.customattr.WorkUnitFinder.find (line 53)
  In parallel.Cluster/findJob>iIsMatchingJobNoError (line 120)
  In parallel.Cluster/findJob>@(x)iIsMatchingJobNoError(x,varargin{:}) (line 109)
  In parallel.Cluster/findJob>iFindSingleJobFromArrayNoError (line 109)
  In parallel.Cluster/findJob>@(x)iFindSingleJobFromArrayNoError(x,convertedArgs{:}) (line 89)
  In parallel.Cluster/findJob (line 89)
  In parallel.internal.pool.InteractiveClient>@(sched,tag,username)sched.findJob('ApiTag',tag,'Username',username) (line 503)
  In parallel.internal.pool.InteractiveClient/pRemoveOldJobs (line 460)
  In parallel.internal.pool.InteractiveClient/start (line 311)
  In parallel.Pool>iStartClient (line 593)
  In parallel.Pool.hBuildPool (line 472)
  In parallel.internal.pool.doParpool (line 18)
  In parpool (line 89)
  In parallel.internal.pool.PoolArrayManager.getOrAutoCreateWithCleanup (line 49)
  In gcp (line 45)
  In mapreducer>iCreateDefaultMapreducer (line 128)
  In mapreducer (line 66)
  In gcmr (line 34)
  In matlab.bigdata.internal.executor.PartitionedArrayExecutor.default (line 134)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray>iGetCurrentExecutor (line 513)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray.createFromConstant (line 71)
  In tall/construct>iCreateFromLocal (line 107)
  In tall/construct (line 85)
  In ez_detect_dsp_monopolar (line 51)
Warning: Variable 'apitag' not found.
> In parallel.internal.cluster.FileSerializer>iLoadMat (line 286)
  In parallel.internal.cluster.FileSerializer/getFields (line 100)
  In parallel.internal.cluster.CJSSupport/getProperties (line 261)
  In parallel.internal.cluster.CJSSupport/getJobProperties (line 472)
  In parallel.internal.cluster.CJSJobMixin/hGetProperty (line 75)
  In parallel.internal.customattr.GetSetImpl>iGetProperties (line 270)
  In parallel.internal.customattr.GetSetImpl>iGetAllProperties (line 248)
  In parallel.internal.customattr.GetSetImpl.getImpl (line 124)
  In parallel.internal.customattr.CustomGetSet/get (line 30)
  In parallel.internal.customattr.WorkUnitFinder/filter (line 28)
  In parallel.internal.customattr.WorkUnitFinder.find (line 53)
  In parallel.Cluster/findJob>iIsMatchingJobNoError (line 120)
  In parallel.Cluster/findJob>@(x)iIsMatchingJobNoError(x,varargin{:}) (line 109)
  In parallel.Cluster/findJob>iFindSingleJobFromArrayNoError (line 109)
  In parallel.Cluster/findJob>@(x)iFindSingleJobFromArrayNoError(x,convertedArgs{:}) (line 89)
  In parallel.Cluster/findJob (line 89)
  In parallel.internal.pool.InteractiveClient>@(sched,tag,username)sched.findJob('ApiTag',tag,'Username',username) (line 503)
  In parallel.internal.pool.InteractiveClient/pRemoveOldJobs (line 460)
  In parallel.internal.pool.InteractiveClient/start (line 311)
  In parallel.Pool>iStartClient (line 593)
  In parallel.Pool.hBuildPool (line 472)
  In parallel.internal.pool.doParpool (line 18)
  In parpool (line 89)
  In parallel.internal.pool.PoolArrayManager.getOrAutoCreateWithCleanup (line 49)
  In gcp (line 45)
  In mapreducer>iCreateDefaultMapreducer (line 128)
  In mapreducer (line 66)
  In gcmr (line 34)
  In matlab.bigdata.internal.executor.PartitionedArrayExecutor.default (line 134)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray>iGetCurrentExecutor (line 513)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray.createFromConstant (line 71)
  In tall/construct>iCreateFromLocal (line 107)
  In tall/construct (line 85)
  In ez_detect_dsp_monopolar (line 51)
Warning: Variable 'apitag' not found.
> In parallel.internal.cluster.FileSerializer>iLoadMat (line 286)
  In parallel.internal.cluster.FileSerializer/getFields (line 100)
  In parallel.internal.cluster.CJSSupport/getProperties (line 281)
  In parallel.internal.cluster.CJSSupport/getJobProperties (line 472)
  In parallel.internal.cluster.CJSJobMixin/hGetProperty (line 75)
  In parallel.internal.customattr.GetSetImpl>iGetProperties (line 270)
  In parallel.internal.customattr.GetSetImpl>iGetAllProperties (line 248)
  In parallel.internal.customattr.GetSetImpl.getImpl (line 124)
  In parallel.internal.customattr.CustomGetSet/get (line 30)
  In parallel.internal.customattr.WorkUnitFinder/filter (line 28)
  In parallel.internal.customattr.WorkUnitFinder.find (line 53)
  In parallel.Cluster/findJob>iIsMatchingJobNoError (line 120)
  In parallel.Cluster/findJob>@(x)iIsMatchingJobNoError(x,varargin{:}) (line 109)
  In parallel.Cluster/findJob>iFindSingleJobFromArrayNoError (line 109)
  In parallel.Cluster/findJob>@(x)iFindSingleJobFromArrayNoError(x,convertedArgs{:}) (line 89)
  In parallel.Cluster/findJob (line 89)
  In parallel.internal.pool.InteractiveClient>@(sched,tag,username)sched.findJob('ApiTag',tag,'Username',username) (line 503)
  In parallel.internal.pool.InteractiveClient/pRemoveOldJobs (line 460)
  In parallel.internal.pool.InteractiveClient/start (line 311)
  In parallel.Pool>iStartClient (line 593)
  In parallel.Pool.hBuildPool (line 472)
  In parallel.internal.pool.doParpool (line 18)
  In parpool (line 89)
  In parallel.internal.pool.PoolArrayManager.getOrAutoCreateWithCleanup (line 49)
  In gcp (line 45)
  In mapreducer>iCreateDefaultMapreducer (line 128)
  In mapreducer (line 66)
  In gcmr (line 34)
  In matlab.bigdata.internal.executor.PartitionedArrayExecutor.default (line 134)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray>iGetCurrentExecutor (line 513)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray.createFromConstant (line 71)
  In tall/construct>iCreateFromLocal (line 107)
  In tall/construct (line 85)
  In ez_detect_dsp_monopolar (line 51)
Warning: Variable 'apitag' not found.
> In parallel.internal.cluster.FileSerializer>iLoadMat (line 286)
  In parallel.internal.cluster.FileSerializer/getFields (line 100)
  In parallel.internal.cluster.CJSSupport/getProperties (line 281)
  In parallel.internal.cluster.CJSSupport/getJobProperties (line 472)
  In parallel.internal.cluster.CJSJobMixin/hGetProperty (line 75)
  In parallel.internal.customattr.GetSetImpl>iGetProperties (line 270)
  In parallel.internal.customattr.GetSetImpl>iGetAllProperties (line 248)
  In parallel.internal.customattr.GetSetImpl.getImpl (line 124)
  In parallel.internal.customattr.CustomGetSet/get (line 30)
  In parallel.internal.customattr.WorkUnitFinder/filter (line 28)
  In parallel.internal.customattr.WorkUnitFinder.find (line 53)
  In parallel.Cluster/findJob>iIsMatchingJobNoError (line 120)
  In parallel.Cluster/findJob>@(x)iIsMatchingJobNoError(x,varargin{:}) (line 109)
  In parallel.Cluster/findJob>iFindSingleJobFromArrayNoError (line 109)
  In parallel.Cluster/findJob>@(x)iFindSingleJobFromArrayNoError(x,convertedArgs{:}) (line 89)
  In parallel.Cluster/findJob (line 89)
  In parallel.internal.pool.InteractiveClient>@(sched,tag,username)sched.findJob('ApiTag',tag,'Username',username) (line 503)
  In parallel.internal.pool.InteractiveClient/pRemoveOldJobs (line 460)
  In parallel.internal.pool.InteractiveClient/start (line 311)
  In parallel.Pool>iStartClient (line 593)
  In parallel.Pool.hBuildPool (line 472)
  In parallel.internal.pool.doParpool (line 18)
  In parpool (line 89)
  In parallel.internal.pool.PoolArrayManager.getOrAutoCreateWithCleanup (line 49)
  In gcp (line 45)
  In mapreducer>iCreateDefaultMapreducer (line 128)
  In mapreducer (line 66)
  In gcmr (line 34)
  In matlab.bigdata.internal.executor.PartitionedArrayExecutor.default (line 134)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray>iGetCurrentExecutor (line 513)
  In matlab.bigdata.internal.lazyeval.LazyPartitionedArray.createFromConstant (line 71)
  In tall/construct>iCreateFromLocal (line 107)
  In tall/construct (line 85)
  In ez_detect_dsp_monopolar (line 51)
connected to 4 workers.
removing excess HF artifact electrodes Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Filtered: 62 of 62 data.
M =

    62


N =

        3151


M =

     1
     1
     1
     1
     1
     1
     1
     1
     1
     1
     1
     1
     1
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     2
     2
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     3
     4
     4
     4
     4
     4
     4
     4
     5
     5
     5
     6
     6
     6
     6
     6
     6
     7
     7
     7
     7
     7
     7


Q =

    0.6637

Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
rebuilding monopolar and bipolar montages Filtered: 62 of 62 data.eeg_checkset warning: number of column in signal array (62) does not match the number of channels (0), corrected
eeg_checkset warning: 3rd dimension in signal array (1) does not match the number of epochs (0), corrected
eeg_checkset warning: number of column in signal array (1200000) does not match the number of points (0), corrected
eeg_checkset warning: inconsistency (xmax-xmin)*rate+1 (=1.000000) must be equal to the number of frames (=1200000); xmax corrected
ENTERING CUDAICA.M
cudaica: using source file '/home/tomas-pastore/ez-detect/src/cudaica/binica.sc' 
cudaica(): using binary ica file '/home/tomas-pastore/ez-detect/src/cudaica/cudaica' 
/home/tomas-pastore/ez-detect/src/cudaica/binica.sccudaica(): processing one (flag, arg) pair.
   setting lrate, 0.001
scriptfile = /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sc
/home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.fdtchmod: no se puede acceder a '/home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sc': No existe el archivo o el directorio

ans =

     1


cudaica(): ica script file /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sc data /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.fdt pwd /home/tomas-pastore/ez-detect/hfo_engine_1/.

Running ica from script file /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sc

eval_call =

    '! /home/tomas-pastore/ez-detect/src/cudaica/cudaica -f /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sc'


binary ica files left in pwd:
-rw-rw-r-- 1 tomas-pastore tomas-pastore   402 dic 13 23:22 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sc
-rw-rw-r-- 1 tomas-pastore tomas-pastore 15376 dic 13 23:28 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.sph
-rw-rw-r-- 1 tomas-pastore tomas-pastore 15376 dic 13 23:28 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica7218.wts

  Name       Size                     Bytes  Class     Attributes

  data      62x1200000            595200000  double              
  sph       62x62                     30752  double              
  wts       62x62                     30752  double              


EEG = 

  struct with fields:

             setname: 'temp'
            filename: ''
            filepath: ''
             subject: ''
               group: ''
           condition: ''
             session: []
            comments: ''
              nbchan: 62
              trials: 1
                pnts: 1200000
               srate: 2000
                xmin: 0
                xmax: 599.9995
               times: []
                data: [62×1200000 double]
              icaact: []
             icawinv: []
           icasphere: [62×62 double]
          icaweights: [62×62 double]
         icachansind: []
            chanlocs: []
          urchanlocs: []
            chaninfo: []
                 ref: []
               event: []
             urevent: []
    eventdescription: {}
               epoch: []
    epochdescription: {}
              reject: [1×1 struct]
               stats: [1×1 struct]
            specdata: []
          specicaact: []
          splinefile: ''
       icasplinefile: ''
              dipfit: []
             history: ''
               saved: 'no'
                 etc: []


EEG = 

  struct with fields:

             setname: 'temp'
            filename: ''
            filepath: ''
             subject: ''
               group: ''
           condition: ''
             session: []
            comments: ''
              nbchan: 62
              trials: 1
                pnts: 1200000
               srate: 2000
                xmin: 0
                xmax: 599.9995
               times: []
                data: [62×1200000 double]
              icaact: []
             icawinv: []
           icasphere: [62×62 double]
          icaweights: [62×62 double]
         icachansind: []
            chanlocs: []
          urchanlocs: []
            chaninfo: []
                 ref: []
               event: []
             urevent: []
    eventdescription: {}
               epoch: []
    epochdescription: {}
              reject: [1×1 struct]
               stats: [1×1 struct]
            specdata: []
          specicaact: []
          splinefile: ''
       icasplinefile: ''
              dipfit: []
             history: ''
               saved: 'no'
                 etc: []


mods =

    '7218'


error_flag =

     0

Computing projection ....
compensating for overstripping ripple ica Calculating artifact index Done calculating artifact index Done calculating baseline stats Running Ripple Detection
ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

detecting additional bad electrodes using neural network   1.0e+07 *

  Columns 1 through 7

    0.0002    0.0000    0.0004    0.0000    0.0001    0.0000    0.0001
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
   -0.0017   -0.0002   -0.0179   -0.0001   -0.0006   -0.0001   -0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000

  Columns 8 through 14

    0.0000    0.0000    0.0127    0.0002    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
   -0.0005   -0.0006   -1.2770   -0.0091   -0.0002   -0.0012   -0.0002
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000

  Columns 15 through 21

    0.0001    0.0003    0.0001    0.0008    0.0011    0.0004    0.0003
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
   -0.0054   -0.0169   -0.0065   -0.0538   -0.0787   -0.0225   -0.0161
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000

  Columns 22 through 26

    0.0006    0.0003    0.0003    0.0000    0.0007
    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000
   -0.0523   -0.0211   -0.0160   -0.0021   -0.0779
    0.0000    0.0000    0.0000    0.0000    0.0000
    0.0000    0.0000    0.0000    0.0000    0.0000

    xoffset: [6×1 double]
       gain: [6×1 double]
       ymin: -1

     1     1

     1     1


a =

    10


b =

     1


c =

    26


d =

     1

removing bad electrodes repeating calculations and detections Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
rebuilding monopolar and bipolar montages Filtered: 60 of 60 data.eeg_checkset warning: number of column in signal array (60) does not match the number of channels (0), corrected
eeg_checkset warning: 3rd dimension in signal array (1) does not match the number of epochs (0), corrected
eeg_checkset warning: number of column in signal array (1200000) does not match the number of points (0), corrected
eeg_checkset warning: inconsistency (xmax-xmin)*rate+1 (=1.000000) must be equal to the number of frames (=1200000); xmax corrected
ENTERING CUDAICA.M
cudaica: using source file '/home/tomas-pastore/ez-detect/src/cudaica/binica.sc' 
cudaica(): using binary ica file '/home/tomas-pastore/ez-detect/src/cudaica/cudaica' 
/home/tomas-pastore/ez-detect/src/cudaica/binica.sccudaica(): processing one (flag, arg) pair.
   setting lrate, 0.001
scriptfile = /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sc
/home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.fdtchmod: no se puede acceder a '/home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sc': No existe el archivo o el directorio

ans =

     1


cudaica(): ica script file /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sc data /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.fdt pwd /home/tomas-pastore/ez-detect/hfo_engine_1/.

Running ica from script file /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sc

eval_call =

    '! /home/tomas-pastore/ez-detect/src/cudaica/cudaica -f /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sc'


binary ica files left in pwd:
-rw-rw-r-- 1 tomas-pastore tomas-pastore   402 dic 13 23:29 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sc
-rw-rw-r-- 1 tomas-pastore tomas-pastore 14400 dic 13 23:35 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.sph
-rw-rw-r-- 1 tomas-pastore tomas-pastore 14400 dic 13 23:35 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica4735.wts

  Name       Size                     Bytes  Class     Attributes

  data      60x1200000            576000000  double              
  sph       60x60                     28800  double              
  wts       60x60                     28800  double              


EEG = 

  struct with fields:

             setname: 'temp'
            filename: ''
            filepath: ''
             subject: ''
               group: ''
           condition: ''
             session: []
            comments: ''
              nbchan: 60
              trials: 1
                pnts: 1200000
               srate: 2000
                xmin: 0
                xmax: 599.9995
               times: []
                data: [60×1200000 double]
              icaact: []
             icawinv: []
           icasphere: [60×60 double]
          icaweights: [60×60 double]
         icachansind: []
            chanlocs: []
          urchanlocs: []
            chaninfo: []
                 ref: []
               event: []
             urevent: []
    eventdescription: {}
               epoch: []
    epochdescription: {}
              reject: [1×1 struct]
               stats: [1×1 struct]
            specdata: []
          specicaact: []
          splinefile: ''
       icasplinefile: ''
              dipfit: []
             history: ''
               saved: 'no'
                 etc: []


EEG = 

  struct with fields:

             setname: 'temp'
            filename: ''
            filepath: ''
             subject: ''
               group: ''
           condition: ''
             session: []
            comments: ''
              nbchan: 60
              trials: 1
                pnts: 1200000
               srate: 2000
                xmin: 0
                xmax: 599.9995
               times: []
                data: [60×1200000 double]
              icaact: []
             icawinv: []
           icasphere: [60×60 double]
          icaweights: [60×60 double]
         icachansind: []
            chanlocs: []
          urchanlocs: []
            chaninfo: []
                 ref: []
               event: []
             urevent: []
    eventdescription: {}
               epoch: []
    epochdescription: {}
              reject: [1×1 struct]
               stats: [1×1 struct]
            specdata: []
          specicaact: []
          splinefile: ''
       icasplinefile: ''
              dipfit: []
             history: ''
               saved: 'no'
                 etc: []


mods =

    '4735'


error_flag =

     0

Computing projection ....
compensating for overstripping ripple ica Calculating artifact index Done calculating artifact index Done calculating baseline stats Running Ripple Detection
ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

writing monopolar iEEG to trc format converting data to 2048 Hz sampling rate Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec

p =

   128


q =

   125

Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....

ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

Filtered: 60 of 60 data.eeg_checkset warning: number of column in signal array (60) does not match the number of channels (0), corrected
eeg_checkset warning: 3rd dimension in signal array (1) does not match the number of epochs (0), corrected
eeg_checkset warning: number of column in signal array (1200000) does not match the number of points (0), corrected
eeg_checkset warning: inconsistency (xmax-xmin)*rate+1 (=1.000000) must be equal to the number of frames (=1200000); xmax corrected
ENTERING CUDAICA.M
cudaica: using source file '/home/tomas-pastore/ez-detect/src/cudaica/binica.sc' 
cudaica(): using binary ica file '/home/tomas-pastore/ez-detect/src/cudaica/cudaica' 
/home/tomas-pastore/ez-detect/src/cudaica/binica.sccudaica(): processing one (flag, arg) pair.
   setting lrate, 0.001
scriptfile = /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sc
/home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.fdtchmod: no se puede acceder a '/home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sc': No existe el archivo o el directorio

ans =

     1


cudaica(): ica script file /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sc data /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.fdt pwd /home/tomas-pastore/ez-detect/hfo_engine_1/.

Running ica from script file /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sc

eval_call =

    '! /home/tomas-pastore/ez-detect/src/cudaica/cudaica -f /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sc'


binary ica files left in pwd:
-rw-rw-r-- 1 tomas-pastore tomas-pastore   402 dic 13 23:39 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sc
-rw-rw-r-- 1 tomas-pastore tomas-pastore 14400 dic 13 23:46 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.sph
-rw-rw-r-- 1 tomas-pastore tomas-pastore 14400 dic 13 23:46 /home/tomas-pastore/ez-detect/hfo_engine_1/cudaica1527.wts

  Name       Size                     Bytes  Class     Attributes

  data      60x1200000            576000000  double              
  sph       60x60                     28800  double              
  wts       60x60                     28800  double              


EEG = 

  struct with fields:

             setname: 'temp'
            filename: ''
            filepath: ''
             subject: ''
               group: ''
           condition: ''
             session: []
            comments: ''
              nbchan: 60
              trials: 1
                pnts: 1200000
               srate: 2000
                xmin: 0
                xmax: 599.9995
               times: []
                data: [60×1200000 double]
              icaact: []
             icawinv: []
           icasphere: [60×60 double]
          icaweights: [60×60 double]
         icachansind: []
            chanlocs: []
          urchanlocs: []
            chaninfo: []
                 ref: []
               event: []
             urevent: []
    eventdescription: {}
               epoch: []
    epochdescription: {}
              reject: [1×1 struct]
               stats: [1×1 struct]
            specdata: []
          specicaact: []
          splinefile: ''
       icasplinefile: ''
              dipfit: []
             history: ''
               saved: 'no'
                 etc: []


EEG = 

  struct with fields:

             setname: 'temp'
            filename: ''
            filepath: ''
             subject: ''
               group: ''
           condition: ''
             session: []
            comments: ''
              nbchan: 60
              trials: 1
                pnts: 1200000
               srate: 2000
                xmin: 0
                xmax: 599.9995
               times: []
                data: [60×1200000 double]
              icaact: []
             icawinv: []
           icasphere: [60×60 double]
          icaweights: [60×60 double]
         icachansind: []
            chanlocs: []
          urchanlocs: []
            chaninfo: []
                 ref: []
               event: []
             urevent: []
    eventdescription: {}
               epoch: []
    epochdescription: {}
              reject: [1×1 struct]
               stats: [1×1 struct]
            specdata: []
          specicaact: []
          splinefile: ''
       icasplinefile: ''
              dipfit: []
             history: ''
               saved: 'no'
                 etc: []


mods =

    '1527'


error_flag =

     0

Computing projection ....
compensating for overstripping fripple ica 
j =

     1


j =

     2


j =

     3


j =

     4


j =

     5


j =

     6


j =

     7


j =

     8


j =

     9


j =

    10


j =

    11


j =

    12


j =

    13


j =

    14


j =

    15


j =

    16


j =

    17


j =

    18


j =

    19


j =

    20


j =

    21


j =

    22


j =

    23


j =

    24


j =

    25


j =

    26


j =

    27


j =

    28


j =

    29


j =

    30


j =

    31


j =

    32


j =

    33


j =

    34


j =

    35


j =

    36


j =

    37


j =

    38


j =

    39


j =

    40


j =

    41


j =

    42


j =

    43


j =

    44


j =

    45


j =

    46


j =

    47


j =

    48


j =

    49


j =

    50


j =

    51


j =

    52


j =

    53


j =

    54


j =

    55


j =

    56


j =

    57


j =

    58


j =

    59


j =

    60

Calculating artifact index Calculating baseline stats Done calculating artifact index Done calculating baseline stats Running Fast Ripple Detection 
ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....
Computing projection ....

ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Entering eztop

fileData = 

  struct with fields:

            error_status: 0
               error_msg: ''
                metadata: [1×1 struct]
              file_block: '1'
           data_duration: 600
        r_clean_duration: 427.3060
       fr_clean_duration: 551.7505
            total_ripple: [60×1 double]
             ripple_clip: {60×290 cell}
       ripple_clip_abs_t: {60×290 cell}
     ripple_clip_event_t: {60×290 cell}
           total_fripple: [60×1 double]
            fripple_clip: {60×32 cell}
      fripple_clip_abs_t: {60×32 cell}
    fripple_clip_event_t: {60×32 cell}


metadata = 

  struct with fields:

           file_id: '449_correct'
            lf_bad: []
       bp_chanlist: {'LMH1'  'LOF3'  ''  ''}
     montage_shape: [66 4]
        m_chanlist: {1×60 cell}
           montage: {66×4 cell}
        file_block: '1'
      hf_xcorr_bad: [1×0 double]
    hf_bad_m_index: []
          hf_bad_m: {}
         hf_bad_m2: {'LMH1'  'LOF3'}

Generating Wavelet Array...
Downsampling...
Interpolating...
TF-Plot Analysis...
Spikes Complete
Generating Wavelet Array...
Downsampling...
Interpolating...
TF-Plot Analysis...
Spikes Complete
Generating Wavelets...
Performing Convolutions...
Ripple Complete
Generating Wavelets...
Performing Convolutions...
Topographical Analysis...
Fast Ripple Complete
Performing Convolutions...
Topographical Analysis...
Fast Ripple Reflex Complete
Performing Convolutions...
Ripple Reflex Complete
File Complete: Ripples and Fast Ripples Processed
Elapsed time is 303.385131 seconds.
initializing annotation files
<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>
Filtered: 2 of 2 data.Done calculating baseline stats Running Ripple Detection
ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

detecting additional bad electrodes using neural network
a =

     2


b =

     1

Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Filtered: 1 of 1 data.Running Fast Ripple Detection 
ans =

    60


ans =

  119.9995


ans =

  179.9990


ans =

  239.9985


ans =

  299.9980


ans =

  359.9975


ans =

  419.9970


ans =

  479.9965


ans =

  539.9960


ans =

  599.9955

detecting additional bad electrodes using neural networkEvaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
writing monopolar iEEG to trc format converting data to 2048 Hz sampling rate 
p =

   128


q =

   125

writing .TRC file #1 in background Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Evaluating tall expression using the Parallel Pool 'local':

Evaluation completed in 0 sec
Entering eztop

fname_var =

    '_bp_'


fileData = 

  struct with fields:

            error_status: 0
               error_msg: ''
                metadata: [1×1 struct]
              file_block: '1'
           data_duration: 600
        r_clean_duration: 427.3060
       fr_clean_duration: 551.7505
            total_ripple: 891
             ripple_clip: {1×891 cell}
       ripple_clip_abs_t: {1×891 cell}
      fripple_clip_abs_t: {[]}
     ripple_clip_event_t: {1×891 cell}
    fripple_clip_event_t: {[]}
           total_fripple: 0
            fripple_clip: {[]}


metadata = 

  struct with fields:

           hf_bad_m: {1×0 cell}
            file_id: '449_correct'
             lf_bad: []
        bp_chanlist: {'LMH1'}
          hf_bad_m2: {'LMH1'  'LOF3'}
      montage_shape: [66 4]
         m_chanlist: {1×60 cell}
       hf_xcorr_bad: [1×0 double]
            montage: {66×4 cell}
         file_block: '1'
     hf_bad_m_index: []
          hf_bad_bp: {'LOF3'}
    hf_bad_bp_index: 2

Generating Wavelet Array...
Downsampling...
Interpolating...
TF-Plot Analysis...
Spikes Complete
Generating Wavelets...
Performing Convolutions...
Ripple Complete
File Complete: Ripples and Fast Ripples Processed
Elapsed time is 124.746922 seconds.
initializing annotation files
<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>

<events>
Converting data from volts to microvolts
First data in microvolts: 9.375
Number of channels 66
Sampling rate: 2000Hz
Using chanlist: 
['RA1' 'RA2' 'RA3' 'RA4' 'RA5' 'RA6' 'RA7' 'RMH1' 'RMH2' 'RMH3' 'RMH4'
 'RMH5' 'RMH6' 'RMH7' 'LA1' 'LA2' 'LA3' 'LA4' 'LA5' 'LA6' 'LA7' 'LEC1'
 'LEC2' 'LEC3' 'LEC4' 'LEC5' 'LEC6' 'LEC7' 'LMH1' 'LMH2' 'LMH3' 'LMH4'
 'LMH5' 'LMH6' 'LMH7' 'LSTG1' 'LSTG2' 'LSTG3' 'LSTG4' 'LSTG5' 'LSTG6'
 'LSTG7' 'LIP1' 'LIP2' 'LIP3' 'LIP4' 'LIP5' 'LIP6' 'LIP7' 'LPO1' 'LPO2'
 'LPO3' 'LPO4' 'LPO5' 'LPO6' 'LPO7' 'LPO8' 'LPO9' 'LOF1' 'LOF2' 'LOF3'
 'LOF4' 'LOF5' 'LOF6' 'EKG' 'LOF7']
Amount of blocks 1
Starting last thread
Starting dsp monopolar block
Converting data from python to matlab (takes long).
Finished dsp monopolar block
Starting bipolar dsp block
Converting data from python to matlab (takes long).
Finished bipolar dsp block
Annotating bipolar block
Finished annotating bipolar block
Reading TRC file header from /home/tomas-pastore/TRCs/449_correct.TRC
This is a System98 header
Reading * MICROMED  Brain-Quick file *
Reading Recording data
	Laboratory:                                
	Patient data
		Surname: LName                 
		Name: Name                
		Birth Date: 1985-4-25
	Recording Date: 2014-7-31
	Recording Time: 3:4:1
	Acqusition Unit: 35
	File Type: 74
	Data stored at 443370 in 66 channels (multiplexer 132)
	Min Sample Freq: 2000
	Bytes per Sample: 2
	Compressed: 0
	Number of Montages: 2
	Video data starts at 4294967295
	Video sync: 0
Reading descriptors
	ORDER: @640 (512 bytes)
	LABCOD: @1152 (81920 bytes)
	NOTE: @83072 (44000 bytes)
	FLAGS: @127072 (800 bytes)
	TRONCA: @127872 (800 bytes)
	IMPED_B: @128672 (512 bytes)
	IMPED_E: @129184 (512 bytes)
	MONTAGE: @129696 (122880 bytes)
	COMPRESS: @252576 (10 bytes)
	AVERAGE: @252586 (128 bytes)
	HISTORY: @252714 (123392 bytes)
	DVIDEO: @376106 (16384 bytes)
	EVENT A: @392490 (864 bytes)
	EVENT B: @393354 (864 bytes)
	TRIGGER: @394218 (49152 bytes)
	BRAINIMG: @0 (0 bytes)
Reading notes
	Note at sample 1: Created with FastWave TRC Writer
Reading flags
Reading segments description
Reading starting impedances
Reading ending impedances
Reading montages
Reading triggers
['RA1', 'RA2', 'RA3', 'RA4', 'RA5', 'RA6', 'RA7', 'RMH1', 'RMH2', 'RMH3', 'RMH4', 'RMH5', 'RMH6', 'RMH7', 'LA1', 'LA2', 'LA3', 'LA4', 'LA5', 'LA6', 'LA7', 'LEC1', 'LEC2', 'LEC3', 'LEC4', 'LEC5', 'LEC6', 'LEC7', 'LMH1', 'LMH2', 'LMH3', 'LMH4', 'LMH5', 'LMH6', 'LMH7', 'LSTG1', 'LSTG2', 'LSTG3', 'LSTG4', 'LSTG5', 'LSTG6', 'LSTG7', 'LIP1', 'LIP2', 'LIP3', 'LIP4', 'LIP5', 'LIP6', 'LIP7', 'LPO1', 'LPO2', 'LPO3', 'LPO4', 'LPO5', 'LPO6', 'LPO7', 'LPO8', 'LPO9', 'LOF1', 'LOF2', 'LOF3', 'LOF4', 'LOF5', 'LOF6', 'EKG', 'LOF7']
