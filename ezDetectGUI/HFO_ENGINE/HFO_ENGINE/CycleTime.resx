<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>