<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>